#lang plait

(define-type Tree
    (leaf [val : Number])
    (node [val : Number]
          [left : Tree]
          [right : Tree]))


;part1 - Sum

(define (sum [s : Tree]) : Number
  (type-case Tree s
    [(leaf l) l]
    [(node v l r) (+ v(+ (sum l) (sum r)))])
 )

(test (sum (node 5 (leaf 6) (leaf 7))) 18 )
(test (sum (node 1 (leaf 2) (leaf 3))) 6 )